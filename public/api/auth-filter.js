"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const log_1 = require("../log");
const option_1 = require("../utils/option");
const authService = require("../service/auth-service");
const errors_1 = require("../utils/errors");
const config = require("config");
const unless = ['/login', '/support'];
const getToken = header => option_1.default(header)
    .filter(header => header.split(' ')[0] === 'Bearer')
    .map(header => header.split(' ')[1])
    .map(header => header.trim())
    .map(header => header.toLowerCase())
    .orElse('');
const getHeader = option_1.default(config.get('jwt.header'))
    .orElse('Authorization');
const extractHeader = req => req.headers[getHeader()];
const isUnless = path => unless.indexOf(path) > -1 ||
    unless.some(uri => path.indexOf(uri) > -1);
const decodedToken = req => {
    const token = getToken(extractHeader(req));
    return authService.verifyToken(token);
};
exports.decodedToken = decodedToken;
const filter = (req, res, next) => {
    const path = req.originalUrl;
    log_1.default.debug(`Auth filter to path=${path}`);
    if (isUnless(path)) {
        log_1.default.debug(`Auth filter is unless to req.path=${path}`);
        next();
    }
    else {
        log_1.default.debug(`Auth filter will verify token to req.path=${path}`);
        decodedToken(req)
            .then(decoded => next())
            .catch(err => errors_1.sendHttpResponse(err, res, next));
    }
};
exports.filter = filter;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC1maWx0ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXBwL2FwaS9hdXRoLWZpbHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLGdDQUEyQjtBQUMzQiw0Q0FBb0M7QUFDcEMsdURBQXNEO0FBQ3RELDRDQUFrRDtBQUVsRCxpQ0FBZ0M7QUFFaEMsTUFBTSxNQUFNLEdBQUcsQ0FBQyxRQUFRLEVBQUUsVUFBVSxDQUFDLENBQUE7QUFFckMsTUFBTSxRQUFRLEdBQUcsTUFBTSxDQUFDLEVBQUUsQ0FBQyxnQkFBTSxDQUFDLE1BQU0sQ0FBQztLQUNwQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLFFBQVEsQ0FBQztLQUNuRCxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ25DLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztLQUM1QixHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsV0FBVyxFQUFFLENBQUM7S0FDbkMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBRWhCLE1BQU0sU0FBUyxHQUFHLGdCQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQztLQUN6QyxNQUFNLENBQUMsZUFBZSxDQUFDLENBQUE7QUFFaEMsTUFBTSxhQUFhLEdBQUcsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFNBQVMsRUFBRSxDQUFDLENBQUE7QUFFckQsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUMxQixNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBRWxFLE1BQU0sWUFBWSxHQUFHLEdBQUcsQ0FBQyxFQUFFO0lBQ3ZCLE1BQU0sS0FBSyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQTtJQUMxQyxNQUFNLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQTtBQUN6QyxDQUFDLENBQUE7QUFnQlEsb0NBQVk7QUFkckIsTUFBTSxNQUFNLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxFQUFFO0lBQzlCLE1BQU0sSUFBSSxHQUFHLEdBQUcsQ0FBQyxXQUFXLENBQUE7SUFDNUIsYUFBTSxDQUFDLEtBQUssQ0FBQyx1QkFBdUIsSUFBSSxFQUFFLENBQUMsQ0FBQTtJQUMzQyxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2pCLGFBQU0sQ0FBQyxLQUFLLENBQUMscUNBQXFDLElBQUksRUFBRSxDQUFDLENBQUE7UUFDekQsSUFBSSxFQUFFLENBQUE7SUFDVixDQUFDO0lBQUMsSUFBSSxDQUFDLENBQUM7UUFDSixhQUFNLENBQUMsS0FBSyxDQUFDLDZDQUE2QyxJQUFJLEVBQUUsQ0FBQyxDQUFBO1FBQ2pFLFlBQVksQ0FBQyxHQUFHLENBQUM7YUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUUsSUFBSSxFQUFFLENBQUM7YUFDeEIsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMseUJBQWdCLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFBO0lBQ25ELENBQUM7QUFDTCxDQUFDLENBQUE7QUFFc0Isd0JBQU0ifQ==