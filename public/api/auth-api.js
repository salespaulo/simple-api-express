"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const log_1 = require("../log");
const authService = require("../service/auth-service");
const errors_1 = require("../utils/errors");
const auth_filter_1 = require("./auth-filter");
const express = require("express");
const URI = '/auth';
const newUser = (req, res, next) => {
    const name = req.body.name;
    const email = req.body.email;
    const password = req.body.password;
    authService.newUser(name, email, password)
        .then(user => res.status(201).json(user))
        .catch(err => errors_1.sendHttpResponse(err, res, next));
};
const me = (req, res, next) => {
    auth_filter_1.decodedToken(req)
        .then(decoded => res.json(decoded))
        .catch(err => errors_1.sendHttpResponse(err, res, next));
};
const logout = (req, res, next) => {
    req.session.destroy();
    res.status(200).json('Logout successfuly!');
    return next();
};
const login = (req, res, next) => {
    const username = req.body.username;
    const password = req.body.password;
    log_1.default.debug(`Login username=${username} password=${password}`);
    authService.login(username, password)
        .then(user => {
        res.json(user);
    })
        .catch(err => errors_1.sendHttpResponse(err, res, next));
};
class AuthApi {
    routes() {
        return express.Router()
            .get('/me', me)
            .post('/users', newUser)
            .post('/login', login)
            .get('/logout', logout);
    }
}
const api = new AuthApi();
exports.default = server => server.use(URI, api.routes());
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC1hcGkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvYXBwL2FwaS9hdXRoLWFwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUdBLGdDQUEyQjtBQUMzQix1REFBc0Q7QUFDdEQsNENBQWtEO0FBQ2xELCtDQUE0QztBQUU1QyxtQ0FBa0M7QUFFbEMsTUFBTSxHQUFHLEdBQUcsT0FBTyxDQUFBO0FBRW5CLE1BQU0sT0FBTyxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsRUFBRTtJQUMvQixNQUFNLElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQTtJQUMxQixNQUFNLEtBQUssR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQTtJQUM1QixNQUFNLFFBQVEsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQTtJQUVsQyxXQUFXLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxLQUFLLEVBQUUsUUFBUSxDQUFDO1NBQ3pDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3hDLEtBQUssQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLHlCQUFnQixDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQTtBQUNuRCxDQUFDLENBQUE7QUFFRCxNQUFNLEVBQUUsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLEVBQUU7SUFDMUIsMEJBQVksQ0FBQyxHQUFHLENBQUM7U0FDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUNuQyxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyx5QkFBZ0IsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUE7QUFDbkQsQ0FBQyxDQUFBO0FBRUQsTUFBTSxNQUFNLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxFQUFFO0lBQzlCLEdBQUcsQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUE7SUFDckIsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUMsQ0FBQTtJQUMzQyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUE7QUFDakIsQ0FBQyxDQUFBO0FBRUQsTUFBTSxLQUFLLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxFQUFFO0lBQzdCLE1BQU0sUUFBUSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFBO0lBQ2xDLE1BQU0sUUFBUSxHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFBO0lBQ2xDLGFBQU0sQ0FBQyxLQUFLLENBQUMsa0JBQWtCLFFBQVEsYUFBYSxRQUFRLEVBQUUsQ0FBQyxDQUFBO0lBRS9ELFdBQVcsQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQztTQUNwQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFDVCxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBO0lBQ2xCLENBQUMsQ0FBQztTQUNELEtBQUssQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLHlCQUFnQixDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQTtBQUNuRCxDQUFDLENBQUE7QUFFRDtJQUNJLE1BQU07UUFDRixNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRTthQUNsQixHQUFHLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQzthQUNkLElBQUksQ0FBQyxRQUFRLEVBQUUsT0FBTyxDQUFDO2FBQ3ZCLElBQUksQ0FBQyxRQUFRLEVBQUUsS0FBSyxDQUFDO2FBQ3JCLEdBQUcsQ0FBQyxTQUFTLEVBQUUsTUFBTSxDQUFDLENBQUE7SUFDL0IsQ0FBQztDQUNKO0FBRUQsTUFBTSxHQUFHLEdBQUcsSUFBSSxPQUFPLEVBQUUsQ0FBQTtBQUV6QixrQkFBZSxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFBIn0=